
function bat_mat2txt(file_name)
% bat_mat2txt
% takes the output data file from BAT session and turns it into something
% more user-friendly
%
% Written by Daniel Buscombe, Nov 2009
% revised December 2010
% revised March 2012, Apr 2012, 0.4 and 0.5
% School of Marine Science and Engineering, University of Plymouth, UK
% daniel.buscombe@plymouth.ac.uk

load(file_name)

% substrate list
list1=importdata('Substrate_main.txt'); % load substrate file- can be any length
list1{end+1}='unassigned'; % add 'unassigned' category to end
list1=[' ';list1]; % add empty to front

% substrate list 2
list2=importdata('Substrate_sub.txt'); % load substrate file- can be any length
list2{end+1}='unassigned'; % add 'unassigned' category to end
list2=[' ';list2]; % add empty to front

data=dat.UserData; % only relevant data
numImages=size(dat.UserData,2); % number of images analysed

        
fid=fopen([file_name,'_output.txt'],'a+'); % open and name file

    % write header for columns
    fprintf(fid,'%s\n',sprintf('%s','image',', ','countID',', ','name',', ','otu',', ',...
        'coordsX',', ','coordsY',', ','area',', ','length',', ',...
        'confidence',', ','text',', ','date',', ','time',', ',...
        'localX',', ','localY',', ','altitude',', ','latitude',', ','longitude',', ',...
        'transformed',', ','resolution (mm/pix)',', ','primary_substrate',...
        ', ','secondary_substrate')); 

for i=1:numImages

    
    numOrgs=size(data(i).countall_names,2); % number of organisms counted
    
%      if isfield(data,'length_coords')
    % just in case length and area structures are not as long as the counts
    % first length ...
    lenLen=size(data(i).length_coord,2);
    if lenLen<numOrgs
        for j=1:(numOrgs-lenLen)
       if ~isempty(data(i).length_coord)
       data(i).length_coord(lenLen+1+j-1)={[]};
       data(i).length(lenLen+1+j-1)={[]};
       end
        end
    end
%     end
    
%     if ~isfield(data(i),'length')
%         data(i).length=[];
%     end
    if isempty(data(i).length)
        for j=1:length(data(i).countall_coords)
        data(i).length=cell(1,j);
        end
    end
    
%     if isfield(data,'area_coords')
    % ... then area
    arLen=size(data(i).area_coord,2);
    if arLen<numOrgs
        for j=1:(numOrgs-arLen)
        if ~isempty(data(i).area_coord)
       data(i).area_coord(arLen+1+j-1)={[]};
       data(i).area(arLen+1+j-1)={[]};
        end
        end  
    end
%     end
    
%     if ~isfield(data(i),'area')
%         data(i).area=[];
%     end
%     if isempty(data(i).area)
        for j=1:length(data(i).countall_coords)
        data(i).area=cell(1,j);
        end
%     end
   
    
    for j=1:numOrgs % loop through number of orgs
                
    coords=data(i).countall_coords{j};
    if isempty(coords)
       coords=[NaN NaN]; 
    end
    
    % if string matches the default, replace it
    if strmatch(char(data(i).metatxt{j}),'For notes ...') % the default
       data(i).metatxt{j}=''; % replace default with empty string
    end
    
    if isnan(data(i).substrate1)
        data(i).substrate1=1;
    end
    if isnan(data(i).substrate2)
        data(i).substrate2=1;
    end   
    
%     if isfield(data,'length') && isfield(data,'area') 
    % write data column-by-column
    
    
    
        fprintf(fid,'%s\n',...
        sprintf('%s',char(data(i).name),', ',...
        num2str(data(i).count(j)),', ',...
        char(data(i).countall_names{j}),', ',...
        char(data(i).counttxt{j}),', ',...
        num2str(coords(1)),', ',...
        num2str(coords(2)),', ',...
        num2str(data(i).area{j}),', ',...
        num2str(data(i).length{j}),', ',...
        char(data(i).confidence{j}),', ',...
        char(data(i).metatxt{j}),', ',...
        char(data(i).adate),', ',...
        char(data(i).atime),', ',...
        num2str(data(i).localX),', ',...
        num2str(data(i).localY),', ',...
        num2str(data(i).altitude),', ',...
        num2str(data(i).lat),', ',...
        num2str(data(i).lon),', ',...
        num2str(data(i).istransformed),', ',...
        num2str(data(i).res),', ',...
        char(list1(data(i).substrate1,:)),', ',...
        char(list2(data(i).substrate2,:)),', ',...
        char(' ')));
    
    end % for numOrgs

end % for numImages
   
fclose(fid); % close file   
% splendid



fid=fopen([file_name,'_count_summary.txt'],'a+'); % open and name file

% write header for columns
fprintf(fid,'%s\n',sprintf('%s','IMAGE',', ','OTU',', ','COUNT',', ','Substrate 1',', ','Substrate 2')); 
    
try
sub1=char(list2(data(i).substrate1,:)); sub1=sub1(1);
catch
sub1='';    
end
try
sub2=char(list2(data(i).substrate2,:)); sub2=sub2(1);
catch
sub2='';    
end

for i=1:numImages
[B,I,J]=unique(data(i).counttxt);
for j=1:length(B)
fprintf(fid,'%s\n',...
        sprintf('%s',char(data(i).name),', ',...
        char(B(j)),', ',...
        num2str(I(j)),', ',...
        sub1,', ',...
        sub2));
end
end
fclose(fid); % close file   








    
%     elseif ~isfield(data(i),'length') && isfield(data(i),'area') 
%         fprintf(fid,'%s\n',...
%         sprintf('%s',char(data(i).name),', ',...
%         num2str(data(i).count(j)),', ',...
%         char(data(i).countall_names{j}),', ',...
%         char(data(i).counttxt{j}),', ',...
%         num2str(coords(1)),', ',...
%         num2str(coords(2)),', ',...
%         num2str(data(i).area{j}),', ',...
%         char(' '),', ',...
%         char(data(i).confidence{j}),', ',...
%         char(data(i).metatxt{j}),', ',...
%         char(data(i).adate),', ',...
%         char(data(i).atime),', ',...
%         num2str(data(i).localX),', ',...
%         num2str(data(i).localY),', ',...
%         num2str(data(i).altitude),', ',...
%         num2str(data(i).lat),', ',...
%         num2str(data(i).lon),', ',...
%         num2str(data(i).istransformed),', ',...
%         num2str(data(i).res),', ',...
%         char(list1(data(i).substrate1,:)),', ',...
%         char(list2(data(i).substrate2,:)),', ',...
%         char(' ')));

      
%     elseif ~isfield(data,'length') && ~isfield(data,'area') 
%         fprintf(fid,'%s\n',...
%         sprintf('%s',char(data(i).name),', ',...
%         num2str(data(i).count(j)),', ',...
%         char(data(i).countall_names{j}),', ',...
%         char(data(i).counttxt{j}),', ',...
%         num2str(coords(1)),', ',...
%         num2str(coords(2)),', ',...
%         char(' '),', ',...
%         char(' '),', ',...
%         char(data(i).confidence{j}),', ',...
%         char(data(i).metatxt{j}),', ',...
%         char(data(i).adate),', ',...
%         char(data(i).atime),', ',...
%         num2str(data(i).localX),', ',...
%         num2str(data(i).localY),', ',...
%         num2str(data(i).altitude),', ',...
%         num2str(data(i).lat),', ',...
%         num2str(data(i).lon),', ',...
%         num2str(data(i).istransformed),', ',...
%         num2str(data(i).res),', ',...
%         char(list1(data(i).substrate1,:)),', ',...
%         char(list2(data(i).substrate2,:)),', ',...
%         char(' ')));
    
%     end %else






